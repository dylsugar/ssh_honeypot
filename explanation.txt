This SSH honeypot works similar to the proxy server, but has to handle the authentication of a client using ssh. The first order of business is to bind to a inputted socket on the local host. If your ssh command using "ssh -p 22 USER@localhost" or localhost=127.0.1.1, then a connection should be set up. Next, paramiko uses SSH functionalities that sets up a server which authenticates that a shell will be used, pty, initiates a thread for mulitple clients to handle, and sets up a channel. Once all of this has been authenticated, we will get the user name and check if it's in the list of authenticated user in the usernames.txt file. If the user is not in the list, then the connection will break and the channel will break and a dictionary will keep track of the amount of attempts. If the attempts of X user is more than 5, then SSH shell access is granted anyways. If the user is in the list, then authentication is granted and a pseudo shell appears with the prompt HW5 Honeypot SSH Server. At the start, recv will get the command and subprocess.Popen will execute the command unless the command is a change directory which instead uses os.chdir. If the socket is idle for less than 60s which is defined with chan.settimeout(60) and an except will terminate the server. All mkdir, cd, ls, cat, etc should be able to be executed within the ssh b/c of subprocess. There was a lot of test/error in the hw.
